// <auto-generated />
using System;
using CheckoutApp.Repositories;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CheckoutApp.Migrations
{
    [DbContext(typeof(BasketContext))]
    [Migration("20221002164056_ChangeToEnum")]
    partial class ChangeToEnum
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CheckoutApp.Models.Domain.Article", b =>
                {
                    b.Property<long>("ArticleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("BasketID")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.HasKey("ArticleId");

                    b.HasIndex("BasketID");

                    b.ToTable("Articles");
                });

            modelBuilder.Entity("CheckoutApp.Models.Domain.Basket", b =>
                {
                    b.Property<long>("BasketID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Customer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PaysVAT")
                        .HasColumnType("bit");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<double>("TotalGross")
                        .HasColumnType("float");

                    b.Property<double>("TotalNet")
                        .HasColumnType("float");

                    b.HasKey("BasketID");

                    b.ToTable("Baskets");
                });

            modelBuilder.Entity("CheckoutApp.Models.Domain.Article", b =>
                {
                    b.HasOne("CheckoutApp.Models.Domain.Basket", null)
                        .WithMany("Articles")
                        .HasForeignKey("BasketID");
                });

            modelBuilder.Entity("CheckoutApp.Models.Domain.Basket", b =>
                {
                    b.Navigation("Articles");
                });
#pragma warning restore 612, 618
        }
    }
}
